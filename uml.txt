Main
association Facade
---
---
+ static main(args: str[]): void
---

Facade
composes PessoaController
composes AtividadeController 
composes TarefaController
composes BuscaController
---
- pessoaController: PessoaController
- atividadeController: AtividadeController
- tarefaController: TarefaController
- buscaController: BuscaController
---
+ Facade()

// Métodos de Pessoas
+ cadastrarPessoa(cpf: str, nome: str, habilidades: str[]): void
+ exibirPessoa(cpf: str): str
+ alterarNomePessoa(cpf: str, novoNome: str): void
+ alterarHabilidadesPessoa(cpf: str, novasHabilidades: str[]): void
+ removerPessoa(cpf: str): void
+ adicionarComentarioPessoa(cpf: str, comentario: str, autorCpf: str): void
+ listarComentariosPessoa(cpf: str): str

// Métodos de Atividades
+ cadastrarAtividade(nome: str, descricao: str, cpf: str): str
+ encerrarAtividade(atividadeId: str): void
+ desativarAtividade(atividadeId: str): void
+ reabrirAtividade(atividadeId: str): void
+ exibirAtividade(atividadeId: str): str
+ alterarDescricaoAtividade(atividadeId: str, descricao: str): void
+ alterarResponsavelAtividade(atividadeId: str, cpf: str): void

// Métodos de Tarefas
+ cadastrarTarefa(atividadeId: str, nome: str, habilidades: str[]): str
+ alterarNomeTarefa(idTarefa: str, novoNome: str): void
+ alterarHabilidadesTarefa(idTarefa: str, habilidades: str[]): void
+ adicionarHorasTarefa(idTarefa: str, horas: int): void
+ removerHorasTarefa(idTarefa: str, horas: int): void
+ concluirTarefa(idTarefa: str): void
+ removerTarefa(idTarefa: str): void
+ exibirTarefa(idTarefa: str): str
+ associarPessoaTarefa(cpf: str, idTarefa: str): void
+ removerPessoaTarefa(cpf: str, idTarefa: str): void

// Métodos de Buscas
+ exibirPessoas(consulta: str): str[]
+ buscarAtividade(consulta: str): str[]
+ buscarTarefas(nome: str): str[]
+ buscarTarefas(idAtividade: str, nome: str): str[]
+ sugerirTarefas(id: cpf): str[]
+ buscasMaisRecentes(nBuscas: int): str[]
+ exibirHistóricoBusca(indexBusca: int): str[]

// Métodos de Funções
+ cadastrarAluno(cpf: str, nome: str, matr: str, periodo: int, habilidades: str[]): void
+ cadastrarProfessor(cpf: str, nome: str, siape: str, disciplinas: str[], habilidades: str[]): void
+ definirFuncaoProfessor(cpf: str, siape: str, disciplinas: str[]): void
+ definirFuncaoAluno(cpf: str, matr: str, periodo: int): void
+ removerFuncao(cpf: str): void
+ pegarNivel(cpf: str): int
+ listarPessoas(): str[]

// Métodos de Tarefas Gerenciais
+ cadastrarTarefaGerencial(atividadeId: str, nome: str, habilidades: str[], idTarefas: str[]): str
+ adicionarNaTarefaGerencial(idTarefaGerencial: str, idTarefa: str): void
+ removerDaTarefaGerencial(idTarefaGerencial: str, idTarefa: str): void
+ contarTodasTarefasNaTarefaGerencial(idTarefaGerencial: str): int
---

// Parte 1

PessoaController
composes PessoaService
---
- pessoaService: PessoaService
---
+ PessoaController(pessoaRepository: PessoaRepository)
+ cadastrarPessoa(cpf: str, nome: str, habilidades: str[]): void
+ exibirPessoa(cpf: str): str
+ alterarNomePessoa(cpf: str, novoNome: str): void
+ alterarHabilidadesPessoa(cpf: str, novasHabilidades: str[]): void
+ removerPessoa(cpf: str): void
+ adicionarComentarioPessoa(cpf: str, comentario: str, autorCpf: str): void
+ listarComentariosPessoa(cpf: str): str
---

PessoaService
composes PessoaRepository
---
- documentoRepository: DocumentoRepository
---
+ PessoaService()
+ cadastrarPessoa(pessoa: Pessoa): void
+ exibirPessoa(cpf: str): str
+ alterarNomePessoa(cpf: str, novoNome: str): void
+ alterarHabilidadesPessoa(cpf: str, novasHabilidades: str[]): void
+ removerPessoa(cpf: str): void
+ adicionarComentarioPessoa(cpf: str, comentario: str, autorCpf: str): void
+ listarComentariosPessoa(cpf: str): str
+ recuperarPessoa(): Optional<Pessoa>
---

// Visibilidade default
PessoaRepository
composes Pessoa
---
- pessoas: Map<str, Pessoa>
---
+ PessoaRepository()
+ cadastrarPessoa(pessoa: Pessoa): void
+ recuperarPessoa(cpf: str): Optional<Pessoa>
+ removerPessoa(cpf: str): void
---

Pessoa
composes Comentario
---
- cpf: str
- nome: str
- habilidades: str[]
- comentario: ArrayList<Comentario>
---
+ Pessoa(cpf: str, nome: str, habilidades: str[])
+ getCpf(): str
+ getNome(): str
+ setNome(nome: str): void
+ setHabilidades(habilidades: str[]): void
- listrarHabilidades(): str
+ listarComentarios(): str
+ toString(): str
+ hashCode(): int
+ equals(obj: Object): boolean
---

Comentario
---
- autor: Pessoa
- data: Date
- descricao: str
---
+ Comentario(autor: Pessoa, descricao: str)
+ toString(): str
---


// Parte 2

AtividadeController
composes AtividadeService
---
- atividadeService: AtividadeService
---
+ AtividadeController(atividadeService: AtividadeService)
+ cadastrarAtividade(nome: str, descricao: str, cpf: str): str
+ encerrarAtividade(atividadeId: str): void
+ desativarAtividade(atividadeId: str): void
+ reabrirAtividade(atividadeId: str): void
+ exibirAtividade(atividadeId: str): str
+ alterarDescricaoAtividade(atividadeId: str, descricao: str): void
+ alterarResponsavelAtividade(atividadeId: str, cpf: str): void
---

AtividadeService
composes AtividadeRepository
---
- atividadeRepository : AtividadeRepository
- pessoaService : PessoaService
- validador: Validador
---
+ AtividadeService(pessoaService: PessoaService)
+ cadastrarAtividade(nome: str, descricao: str, cpf: str): str
+ encerrarAtividade(atividadeId: str): void
+ desativarAtividade(atividadeId: str): void
+ reabrirAtividade(atividadeId: str): void
+ exibirAtividade(atividadeId: str): str
+ alterarDescricaoAtividade(atividadeId: str, descricao: str): void
+ alterarResponsavelAtividade(atividadeId: str, cpf: str): void
+ recuperaAtividadeOuFalhe(atividadeId: str): Atividade
---

AtividadeRepository
composes Atividade
---
- atividades: Map<str, Atividade>
- validador: Validador
---
+ AtividadeRepository()
+ cadastrarAtividade(nome: str, descricao: str, responsavel: Pessoa): str
- gerarId(nome: str): str
+ recuperarAtividade(atividadeId: str): Optional<Atividade>
---

Atividade
---
- id: str
- nome: str
- descricao: str
- responsavel: Pessoa
---
+ Atividade(id: str, nome: str, descicao: str, responsavel: Pessoa)
---

// Parte 3

TarefaController
---
---
+ TarefaController()
+ cadastrarPessoa(cpf: str, nome: str, habilidades: str[]): void
+ exibirPessoa(cpf: str): str
+ alterarNomePessoa(cpf: str, novoNome: str): void
+ alterarHabilidadesPessoa(cpf: str, novasHabilidades: str[]): void
+ removerPessoa(cpf: str): void
+ adicionarComentarioPessoa(cpf: str, comentario: str, autorCpf: str): void
+ listarComentariosPessoa(cpf: str): str
---

// Parte 4

BuscaController
---
---
+ BuscaController()
+ exibirPessoas(consulta: str): str[]
+ buscarAtividade(consulta: str): str[]
+ buscarTarefas(nome: str): str[]
+ buscarTarefas(idAtividade: str, nome: str): str[]
+ sugerirTarefas(id: cpf): str[]
+ buscasMaisRecentes(nBuscas: int): str[]
+ exibirHistóricoBusca(indexBusca: int): str[]
---